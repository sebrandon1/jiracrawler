name: Nightly Integration Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering for testing

env:
  # Prevent secrets from being exposed to forks
  UPSTREAM_REPO: sebrandon1/jiracrawler

jobs:
  security-check:
    runs-on: ubuntu-latest
    outputs:
      is-upstream: ${{ steps.check.outputs.is-upstream }}
    steps:
      - name: Check if running on upstream repository
        id: check
        run: |
          if [ "${{ github.repository }}" = "$UPSTREAM_REPO" ]; then
            echo "is-upstream=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Running on upstream repository: ${{ github.repository }}"
          else
            echo "is-upstream=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Running on fork: ${{ github.repository }}, skipping integration tests"
          fi

  integration-tests:
    runs-on: ubuntu-latest
    needs: security-check
    if: needs.security-check.outputs.is-upstream == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Verify repository
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "Event: ${{ github.event_name }}"
          
      - name: Build binary
        run: make build

      - name: Create JIRA config
        env:
          JIRA_URL: ${{ secrets.JIRA_URL }}
          JIRA_USER: ${{ secrets.JIRA_USER }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          if [ -z "$JIRA_URL" ] || [ -z "$JIRA_USER" ] || [ -z "$JIRA_API_TOKEN" ]; then
            echo "‚ùå Required secrets not set. Please configure:"
            echo "  - JIRA_URL (e.g., https://issues.redhat.com)"
            echo "  - JIRA_USER (e.g., user@redhat.com)"
            echo "  - JIRA_API_TOKEN"
            exit 1
          fi
          
          echo "üîß Configuring JIRA credentials..."
          ./jiracrawler config set --url "$JIRA_URL" --user "$JIRA_USER" --token "$JIRA_API_TOKEN"

      - name: Run integration tests
        env:
          JIRACRAWLER_TEST_USER: ${{ secrets.JIRA_USER }}
          JIRACRAWLER_TEST_PROJECT: ${{ secrets.JIRA_TEST_PROJECT || 'CNF' }}
        run: |
          echo "üß™ Running integration tests..."
          echo "Test user: $JIRACRAWLER_TEST_USER"
          echo "Test project: $JIRACRAWLER_TEST_PROJECT"
          
          make integration-test

      - name: Cleanup credentials
        if: always()
        run: |
          echo "üßπ Cleaning up credentials..."
          rm -f .jiracrawler-config.yaml jiracrawler

  notification:
    runs-on: ubuntu-latest
    needs: [security-check, integration-tests]
    if: always() && needs.security-check.outputs.is-upstream == 'true'
    
    steps:
      - name: Report results
        run: |
          if [ "${{ needs.integration-tests.result }}" = "success" ]; then
            echo "‚úÖ Integration tests passed successfully"
          elif [ "${{ needs.integration-tests.result }}" = "failure" ]; then
            echo "‚ùå Integration tests failed"
            exit 1
          elif [ "${{ needs.integration-tests.result }}" = "skipped" ]; then
            echo "‚ö†Ô∏è Integration tests were skipped"
          else
            echo "‚ùì Integration tests had unexpected result: ${{ needs.integration-tests.result }}"
          fi 